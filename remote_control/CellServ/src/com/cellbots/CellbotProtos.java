// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/Cellbots.proto

package com.cellbots;

public final class CellbotProtos {
  private CellbotProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class PhoneState extends
      com.google.protobuf.GeneratedMessage {
    // Use PhoneState.newBuilder() to construct.
    private PhoneState() {
      initFields();
    }
    private PhoneState(boolean noInit) {}
    
    private static final PhoneState defaultInstance;
    public static PhoneState getDefaultInstance() {
      return defaultInstance;
    }
    
    public PhoneState getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cellbots.CellbotProtos.internal_static_tutorial_PhoneState_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cellbots.CellbotProtos.internal_static_tutorial_PhoneState_fieldAccessorTable;
    }
    
    public static final class Compass extends
        com.google.protobuf.GeneratedMessage {
      // Use Compass.newBuilder() to construct.
      private Compass() {
        initFields();
      }
      private Compass(boolean noInit) {}
      
      private static final Compass defaultInstance;
      public static Compass getDefaultInstance() {
        return defaultInstance;
      }
      
      public Compass getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cellbots.CellbotProtos.internal_static_tutorial_PhoneState_Compass_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cellbots.CellbotProtos.internal_static_tutorial_PhoneState_Compass_fieldAccessorTable;
      }
      
      // optional float x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private boolean hasX;
      private float x_ = 0F;
      public boolean hasX() { return hasX; }
      public float getX() { return x_; }
      
      // optional float y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private boolean hasY;
      private float y_ = 0F;
      public boolean hasY() { return hasY; }
      public float getY() { return y_; }
      
      // optional float z = 3;
      public static final int Z_FIELD_NUMBER = 3;
      private boolean hasZ;
      private float z_ = 0F;
      public boolean hasZ() { return hasZ; }
      public float getZ() { return z_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasX()) {
          output.writeFloat(1, getX());
        }
        if (hasY()) {
          output.writeFloat(2, getY());
        }
        if (hasZ()) {
          output.writeFloat(3, getZ());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, getY());
        }
        if (hasZ()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, getZ());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.cellbots.CellbotProtos.PhoneState.Compass parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Compass parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Compass parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Compass parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Compass parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Compass parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Compass parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.cellbots.CellbotProtos.PhoneState.Compass parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.cellbots.CellbotProtos.PhoneState.Compass parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Compass parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.cellbots.CellbotProtos.PhoneState.Compass prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private com.cellbots.CellbotProtos.PhoneState.Compass result;
        
        // Construct using com.cellbots.CellbotProtos.PhoneState.Compass.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.cellbots.CellbotProtos.PhoneState.Compass();
          return builder;
        }
        
        protected com.cellbots.CellbotProtos.PhoneState.Compass internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.cellbots.CellbotProtos.PhoneState.Compass();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.cellbots.CellbotProtos.PhoneState.Compass.getDescriptor();
        }
        
        public com.cellbots.CellbotProtos.PhoneState.Compass getDefaultInstanceForType() {
          return com.cellbots.CellbotProtos.PhoneState.Compass.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.cellbots.CellbotProtos.PhoneState.Compass build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.cellbots.CellbotProtos.PhoneState.Compass buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.cellbots.CellbotProtos.PhoneState.Compass buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.cellbots.CellbotProtos.PhoneState.Compass returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.cellbots.CellbotProtos.PhoneState.Compass) {
            return mergeFrom((com.cellbots.CellbotProtos.PhoneState.Compass)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.cellbots.CellbotProtos.PhoneState.Compass other) {
          if (other == com.cellbots.CellbotProtos.PhoneState.Compass.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasZ()) {
            setZ(other.getZ());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 13: {
                setX(input.readFloat());
                break;
              }
              case 21: {
                setY(input.readFloat());
                break;
              }
              case 29: {
                setZ(input.readFloat());
                break;
              }
            }
          }
        }
        
        
        // optional float x = 1;
        public boolean hasX() {
          return result.hasX();
        }
        public float getX() {
          return result.getX();
        }
        public Builder setX(float value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0F;
          return this;
        }
        
        // optional float y = 2;
        public boolean hasY() {
          return result.hasY();
        }
        public float getY() {
          return result.getY();
        }
        public Builder setY(float value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0F;
          return this;
        }
        
        // optional float z = 3;
        public boolean hasZ() {
          return result.hasZ();
        }
        public float getZ() {
          return result.getZ();
        }
        public Builder setZ(float value) {
          result.hasZ = true;
          result.z_ = value;
          return this;
        }
        public Builder clearZ() {
          result.hasZ = false;
          result.z_ = 0F;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:tutorial.PhoneState.Compass)
      }
      
      static {
        defaultInstance = new Compass(true);
        com.cellbots.CellbotProtos.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:tutorial.PhoneState.Compass)
    }
    
    public static final class Accelerometer extends
        com.google.protobuf.GeneratedMessage {
      // Use Accelerometer.newBuilder() to construct.
      private Accelerometer() {
        initFields();
      }
      private Accelerometer(boolean noInit) {}
      
      private static final Accelerometer defaultInstance;
      public static Accelerometer getDefaultInstance() {
        return defaultInstance;
      }
      
      public Accelerometer getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cellbots.CellbotProtos.internal_static_tutorial_PhoneState_Accelerometer_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cellbots.CellbotProtos.internal_static_tutorial_PhoneState_Accelerometer_fieldAccessorTable;
      }
      
      // optional float x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private boolean hasX;
      private float x_ = 0F;
      public boolean hasX() { return hasX; }
      public float getX() { return x_; }
      
      // optional float y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private boolean hasY;
      private float y_ = 0F;
      public boolean hasY() { return hasY; }
      public float getY() { return y_; }
      
      // optional float z = 3;
      public static final int Z_FIELD_NUMBER = 3;
      private boolean hasZ;
      private float z_ = 0F;
      public boolean hasZ() { return hasZ; }
      public float getZ() { return z_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasX()) {
          output.writeFloat(1, getX());
        }
        if (hasY()) {
          output.writeFloat(2, getY());
        }
        if (hasZ()) {
          output.writeFloat(3, getZ());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, getY());
        }
        if (hasZ()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, getZ());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.cellbots.CellbotProtos.PhoneState.Accelerometer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Accelerometer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Accelerometer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Accelerometer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Accelerometer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Accelerometer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Accelerometer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.cellbots.CellbotProtos.PhoneState.Accelerometer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.cellbots.CellbotProtos.PhoneState.Accelerometer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Accelerometer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.cellbots.CellbotProtos.PhoneState.Accelerometer prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private com.cellbots.CellbotProtos.PhoneState.Accelerometer result;
        
        // Construct using com.cellbots.CellbotProtos.PhoneState.Accelerometer.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.cellbots.CellbotProtos.PhoneState.Accelerometer();
          return builder;
        }
        
        protected com.cellbots.CellbotProtos.PhoneState.Accelerometer internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.cellbots.CellbotProtos.PhoneState.Accelerometer();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.cellbots.CellbotProtos.PhoneState.Accelerometer.getDescriptor();
        }
        
        public com.cellbots.CellbotProtos.PhoneState.Accelerometer getDefaultInstanceForType() {
          return com.cellbots.CellbotProtos.PhoneState.Accelerometer.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.cellbots.CellbotProtos.PhoneState.Accelerometer build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.cellbots.CellbotProtos.PhoneState.Accelerometer buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.cellbots.CellbotProtos.PhoneState.Accelerometer buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.cellbots.CellbotProtos.PhoneState.Accelerometer returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.cellbots.CellbotProtos.PhoneState.Accelerometer) {
            return mergeFrom((com.cellbots.CellbotProtos.PhoneState.Accelerometer)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.cellbots.CellbotProtos.PhoneState.Accelerometer other) {
          if (other == com.cellbots.CellbotProtos.PhoneState.Accelerometer.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasZ()) {
            setZ(other.getZ());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 13: {
                setX(input.readFloat());
                break;
              }
              case 21: {
                setY(input.readFloat());
                break;
              }
              case 29: {
                setZ(input.readFloat());
                break;
              }
            }
          }
        }
        
        
        // optional float x = 1;
        public boolean hasX() {
          return result.hasX();
        }
        public float getX() {
          return result.getX();
        }
        public Builder setX(float value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0F;
          return this;
        }
        
        // optional float y = 2;
        public boolean hasY() {
          return result.hasY();
        }
        public float getY() {
          return result.getY();
        }
        public Builder setY(float value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0F;
          return this;
        }
        
        // optional float z = 3;
        public boolean hasZ() {
          return result.hasZ();
        }
        public float getZ() {
          return result.getZ();
        }
        public Builder setZ(float value) {
          result.hasZ = true;
          result.z_ = value;
          return this;
        }
        public Builder clearZ() {
          result.hasZ = false;
          result.z_ = 0F;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:tutorial.PhoneState.Accelerometer)
      }
      
      static {
        defaultInstance = new Accelerometer(true);
        com.cellbots.CellbotProtos.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:tutorial.PhoneState.Accelerometer)
    }
    
    public static final class Orientation extends
        com.google.protobuf.GeneratedMessage {
      // Use Orientation.newBuilder() to construct.
      private Orientation() {
        initFields();
      }
      private Orientation(boolean noInit) {}
      
      private static final Orientation defaultInstance;
      public static Orientation getDefaultInstance() {
        return defaultInstance;
      }
      
      public Orientation getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cellbots.CellbotProtos.internal_static_tutorial_PhoneState_Orientation_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cellbots.CellbotProtos.internal_static_tutorial_PhoneState_Orientation_fieldAccessorTable;
      }
      
      // optional float azimuth = 6;
      public static final int AZIMUTH_FIELD_NUMBER = 6;
      private boolean hasAzimuth;
      private float azimuth_ = 0F;
      public boolean hasAzimuth() { return hasAzimuth; }
      public float getAzimuth() { return azimuth_; }
      
      // optional float pitch = 7;
      public static final int PITCH_FIELD_NUMBER = 7;
      private boolean hasPitch;
      private float pitch_ = 0F;
      public boolean hasPitch() { return hasPitch; }
      public float getPitch() { return pitch_; }
      
      // optional float roll = 8;
      public static final int ROLL_FIELD_NUMBER = 8;
      private boolean hasRoll;
      private float roll_ = 0F;
      public boolean hasRoll() { return hasRoll; }
      public float getRoll() { return roll_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasAzimuth()) {
          output.writeFloat(6, getAzimuth());
        }
        if (hasPitch()) {
          output.writeFloat(7, getPitch());
        }
        if (hasRoll()) {
          output.writeFloat(8, getRoll());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasAzimuth()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(6, getAzimuth());
        }
        if (hasPitch()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, getPitch());
        }
        if (hasRoll()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, getRoll());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.cellbots.CellbotProtos.PhoneState.Orientation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Orientation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Orientation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Orientation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Orientation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Orientation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Orientation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.cellbots.CellbotProtos.PhoneState.Orientation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.cellbots.CellbotProtos.PhoneState.Orientation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.cellbots.CellbotProtos.PhoneState.Orientation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.cellbots.CellbotProtos.PhoneState.Orientation prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private com.cellbots.CellbotProtos.PhoneState.Orientation result;
        
        // Construct using com.cellbots.CellbotProtos.PhoneState.Orientation.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.cellbots.CellbotProtos.PhoneState.Orientation();
          return builder;
        }
        
        protected com.cellbots.CellbotProtos.PhoneState.Orientation internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.cellbots.CellbotProtos.PhoneState.Orientation();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.cellbots.CellbotProtos.PhoneState.Orientation.getDescriptor();
        }
        
        public com.cellbots.CellbotProtos.PhoneState.Orientation getDefaultInstanceForType() {
          return com.cellbots.CellbotProtos.PhoneState.Orientation.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.cellbots.CellbotProtos.PhoneState.Orientation build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.cellbots.CellbotProtos.PhoneState.Orientation buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.cellbots.CellbotProtos.PhoneState.Orientation buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.cellbots.CellbotProtos.PhoneState.Orientation returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.cellbots.CellbotProtos.PhoneState.Orientation) {
            return mergeFrom((com.cellbots.CellbotProtos.PhoneState.Orientation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.cellbots.CellbotProtos.PhoneState.Orientation other) {
          if (other == com.cellbots.CellbotProtos.PhoneState.Orientation.getDefaultInstance()) return this;
          if (other.hasAzimuth()) {
            setAzimuth(other.getAzimuth());
          }
          if (other.hasPitch()) {
            setPitch(other.getPitch());
          }
          if (other.hasRoll()) {
            setRoll(other.getRoll());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 53: {
                setAzimuth(input.readFloat());
                break;
              }
              case 61: {
                setPitch(input.readFloat());
                break;
              }
              case 69: {
                setRoll(input.readFloat());
                break;
              }
            }
          }
        }
        
        
        // optional float azimuth = 6;
        public boolean hasAzimuth() {
          return result.hasAzimuth();
        }
        public float getAzimuth() {
          return result.getAzimuth();
        }
        public Builder setAzimuth(float value) {
          result.hasAzimuth = true;
          result.azimuth_ = value;
          return this;
        }
        public Builder clearAzimuth() {
          result.hasAzimuth = false;
          result.azimuth_ = 0F;
          return this;
        }
        
        // optional float pitch = 7;
        public boolean hasPitch() {
          return result.hasPitch();
        }
        public float getPitch() {
          return result.getPitch();
        }
        public Builder setPitch(float value) {
          result.hasPitch = true;
          result.pitch_ = value;
          return this;
        }
        public Builder clearPitch() {
          result.hasPitch = false;
          result.pitch_ = 0F;
          return this;
        }
        
        // optional float roll = 8;
        public boolean hasRoll() {
          return result.hasRoll();
        }
        public float getRoll() {
          return result.getRoll();
        }
        public Builder setRoll(float value) {
          result.hasRoll = true;
          result.roll_ = value;
          return this;
        }
        public Builder clearRoll() {
          result.hasRoll = false;
          result.roll_ = 0F;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:tutorial.PhoneState.Orientation)
      }
      
      static {
        defaultInstance = new Orientation(true);
        com.cellbots.CellbotProtos.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:tutorial.PhoneState.Orientation)
    }
    
    // required int64 timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private boolean hasTimestamp;
    private long timestamp_ = 0L;
    public boolean hasTimestamp() { return hasTimestamp; }
    public long getTimestamp() { return timestamp_; }
    
    // optional bytes videoFrame = 2;
    public static final int VIDEOFRAME_FIELD_NUMBER = 2;
    private boolean hasVideoFrame;
    private com.google.protobuf.ByteString videoFrame_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasVideoFrame() { return hasVideoFrame; }
    public com.google.protobuf.ByteString getVideoFrame() { return videoFrame_; }
    
    // optional string dbgMsg = 3;
    public static final int DBGMSG_FIELD_NUMBER = 3;
    private boolean hasDbgMsg;
    private java.lang.String dbgMsg_ = "";
    public boolean hasDbgMsg() { return hasDbgMsg; }
    public java.lang.String getDbgMsg() { return dbgMsg_; }
    
    // optional .tutorial.PhoneState.Compass compass = 4;
    public static final int COMPASS_FIELD_NUMBER = 4;
    private boolean hasCompass;
    private com.cellbots.CellbotProtos.PhoneState.Compass compass_;
    public boolean hasCompass() { return hasCompass; }
    public com.cellbots.CellbotProtos.PhoneState.Compass getCompass() { return compass_; }
    
    // optional .tutorial.PhoneState.Accelerometer accelerometer = 5;
    public static final int ACCELEROMETER_FIELD_NUMBER = 5;
    private boolean hasAccelerometer;
    private com.cellbots.CellbotProtos.PhoneState.Accelerometer accelerometer_;
    public boolean hasAccelerometer() { return hasAccelerometer; }
    public com.cellbots.CellbotProtos.PhoneState.Accelerometer getAccelerometer() { return accelerometer_; }
    
    // optional .tutorial.PhoneState.Orientation orientation = 6;
    public static final int ORIENTATION_FIELD_NUMBER = 6;
    private boolean hasOrientation;
    private com.cellbots.CellbotProtos.PhoneState.Orientation orientation_;
    public boolean hasOrientation() { return hasOrientation; }
    public com.cellbots.CellbotProtos.PhoneState.Orientation getOrientation() { return orientation_; }
    
    // optional float phoneBatteryLevel = 7;
    public static final int PHONEBATTERYLEVEL_FIELD_NUMBER = 7;
    private boolean hasPhoneBatteryLevel;
    private float phoneBatteryLevel_ = 0F;
    public boolean hasPhoneBatteryLevel() { return hasPhoneBatteryLevel; }
    public float getPhoneBatteryLevel() { return phoneBatteryLevel_; }
    
    // optional int32 phoneBatteryTemp = 8;
    public static final int PHONEBATTERYTEMP_FIELD_NUMBER = 8;
    private boolean hasPhoneBatteryTemp;
    private int phoneBatteryTemp_ = 0;
    public boolean hasPhoneBatteryTemp() { return hasPhoneBatteryTemp; }
    public int getPhoneBatteryTemp() { return phoneBatteryTemp_; }
    
    // optional int32 wifiStrength = 9;
    public static final int WIFISTRENGTH_FIELD_NUMBER = 9;
    private boolean hasWifiStrength;
    private int wifiStrength_ = 0;
    public boolean hasWifiStrength() { return hasWifiStrength; }
    public int getWifiStrength() { return wifiStrength_; }
    
    // optional int32 wifiSpeed = 10;
    public static final int WIFISPEED_FIELD_NUMBER = 10;
    private boolean hasWifiSpeed;
    private int wifiSpeed_ = 0;
    public boolean hasWifiSpeed() { return hasWifiSpeed; }
    public int getWifiSpeed() { return wifiSpeed_; }
    
    // optional float lightLevel = 11;
    public static final int LIGHTLEVEL_FIELD_NUMBER = 11;
    private boolean hasLightLevel;
    private float lightLevel_ = 0F;
    public boolean hasLightLevel() { return hasLightLevel; }
    public float getLightLevel() { return lightLevel_; }
    
    // optional string botID = 12;
    public static final int BOTID_FIELD_NUMBER = 12;
    private boolean hasBotID;
    private java.lang.String botID_ = "";
    public boolean hasBotID() { return hasBotID; }
    public java.lang.String getBotID() { return botID_; }
    
    private void initFields() {
      compass_ = com.cellbots.CellbotProtos.PhoneState.Compass.getDefaultInstance();
      accelerometer_ = com.cellbots.CellbotProtos.PhoneState.Accelerometer.getDefaultInstance();
      orientation_ = com.cellbots.CellbotProtos.PhoneState.Orientation.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasTimestamp) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTimestamp()) {
        output.writeInt64(1, getTimestamp());
      }
      if (hasVideoFrame()) {
        output.writeBytes(2, getVideoFrame());
      }
      if (hasDbgMsg()) {
        output.writeString(3, getDbgMsg());
      }
      if (hasCompass()) {
        output.writeMessage(4, getCompass());
      }
      if (hasAccelerometer()) {
        output.writeMessage(5, getAccelerometer());
      }
      if (hasOrientation()) {
        output.writeMessage(6, getOrientation());
      }
      if (hasPhoneBatteryLevel()) {
        output.writeFloat(7, getPhoneBatteryLevel());
      }
      if (hasPhoneBatteryTemp()) {
        output.writeInt32(8, getPhoneBatteryTemp());
      }
      if (hasWifiStrength()) {
        output.writeInt32(9, getWifiStrength());
      }
      if (hasWifiSpeed()) {
        output.writeInt32(10, getWifiSpeed());
      }
      if (hasLightLevel()) {
        output.writeFloat(11, getLightLevel());
      }
      if (hasBotID()) {
        output.writeString(12, getBotID());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getTimestamp());
      }
      if (hasVideoFrame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getVideoFrame());
      }
      if (hasDbgMsg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getDbgMsg());
      }
      if (hasCompass()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCompass());
      }
      if (hasAccelerometer()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getAccelerometer());
      }
      if (hasOrientation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getOrientation());
      }
      if (hasPhoneBatteryLevel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, getPhoneBatteryLevel());
      }
      if (hasPhoneBatteryTemp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, getPhoneBatteryTemp());
      }
      if (hasWifiStrength()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getWifiStrength());
      }
      if (hasWifiSpeed()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, getWifiSpeed());
      }
      if (hasLightLevel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, getLightLevel());
      }
      if (hasBotID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(12, getBotID());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.cellbots.CellbotProtos.PhoneState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.cellbots.CellbotProtos.PhoneState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.cellbots.CellbotProtos.PhoneState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.cellbots.CellbotProtos.PhoneState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.cellbots.CellbotProtos.PhoneState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.cellbots.CellbotProtos.PhoneState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.cellbots.CellbotProtos.PhoneState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.cellbots.CellbotProtos.PhoneState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.cellbots.CellbotProtos.PhoneState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.cellbots.CellbotProtos.PhoneState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cellbots.CellbotProtos.PhoneState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.cellbots.CellbotProtos.PhoneState result;
      
      // Construct using com.cellbots.CellbotProtos.PhoneState.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.cellbots.CellbotProtos.PhoneState();
        return builder;
      }
      
      protected com.cellbots.CellbotProtos.PhoneState internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.cellbots.CellbotProtos.PhoneState();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cellbots.CellbotProtos.PhoneState.getDescriptor();
      }
      
      public com.cellbots.CellbotProtos.PhoneState getDefaultInstanceForType() {
        return com.cellbots.CellbotProtos.PhoneState.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.cellbots.CellbotProtos.PhoneState build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.cellbots.CellbotProtos.PhoneState buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.cellbots.CellbotProtos.PhoneState buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.cellbots.CellbotProtos.PhoneState returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cellbots.CellbotProtos.PhoneState) {
          return mergeFrom((com.cellbots.CellbotProtos.PhoneState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.cellbots.CellbotProtos.PhoneState other) {
        if (other == com.cellbots.CellbotProtos.PhoneState.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasVideoFrame()) {
          setVideoFrame(other.getVideoFrame());
        }
        if (other.hasDbgMsg()) {
          setDbgMsg(other.getDbgMsg());
        }
        if (other.hasCompass()) {
          mergeCompass(other.getCompass());
        }
        if (other.hasAccelerometer()) {
          mergeAccelerometer(other.getAccelerometer());
        }
        if (other.hasOrientation()) {
          mergeOrientation(other.getOrientation());
        }
        if (other.hasPhoneBatteryLevel()) {
          setPhoneBatteryLevel(other.getPhoneBatteryLevel());
        }
        if (other.hasPhoneBatteryTemp()) {
          setPhoneBatteryTemp(other.getPhoneBatteryTemp());
        }
        if (other.hasWifiStrength()) {
          setWifiStrength(other.getWifiStrength());
        }
        if (other.hasWifiSpeed()) {
          setWifiSpeed(other.getWifiSpeed());
        }
        if (other.hasLightLevel()) {
          setLightLevel(other.getLightLevel());
        }
        if (other.hasBotID()) {
          setBotID(other.getBotID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTimestamp(input.readInt64());
              break;
            }
            case 18: {
              setVideoFrame(input.readBytes());
              break;
            }
            case 26: {
              setDbgMsg(input.readString());
              break;
            }
            case 34: {
              com.cellbots.CellbotProtos.PhoneState.Compass.Builder subBuilder = com.cellbots.CellbotProtos.PhoneState.Compass.newBuilder();
              if (hasCompass()) {
                subBuilder.mergeFrom(getCompass());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCompass(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.cellbots.CellbotProtos.PhoneState.Accelerometer.Builder subBuilder = com.cellbots.CellbotProtos.PhoneState.Accelerometer.newBuilder();
              if (hasAccelerometer()) {
                subBuilder.mergeFrom(getAccelerometer());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAccelerometer(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.cellbots.CellbotProtos.PhoneState.Orientation.Builder subBuilder = com.cellbots.CellbotProtos.PhoneState.Orientation.newBuilder();
              if (hasOrientation()) {
                subBuilder.mergeFrom(getOrientation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setOrientation(subBuilder.buildPartial());
              break;
            }
            case 61: {
              setPhoneBatteryLevel(input.readFloat());
              break;
            }
            case 64: {
              setPhoneBatteryTemp(input.readInt32());
              break;
            }
            case 72: {
              setWifiStrength(input.readInt32());
              break;
            }
            case 80: {
              setWifiSpeed(input.readInt32());
              break;
            }
            case 93: {
              setLightLevel(input.readFloat());
              break;
            }
            case 98: {
              setBotID(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required int64 timestamp = 1;
      public boolean hasTimestamp() {
        return result.hasTimestamp();
      }
      public long getTimestamp() {
        return result.getTimestamp();
      }
      public Builder setTimestamp(long value) {
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder clearTimestamp() {
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      // optional bytes videoFrame = 2;
      public boolean hasVideoFrame() {
        return result.hasVideoFrame();
      }
      public com.google.protobuf.ByteString getVideoFrame() {
        return result.getVideoFrame();
      }
      public Builder setVideoFrame(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVideoFrame = true;
        result.videoFrame_ = value;
        return this;
      }
      public Builder clearVideoFrame() {
        result.hasVideoFrame = false;
        result.videoFrame_ = getDefaultInstance().getVideoFrame();
        return this;
      }
      
      // optional string dbgMsg = 3;
      public boolean hasDbgMsg() {
        return result.hasDbgMsg();
      }
      public java.lang.String getDbgMsg() {
        return result.getDbgMsg();
      }
      public Builder setDbgMsg(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDbgMsg = true;
        result.dbgMsg_ = value;
        return this;
      }
      public Builder clearDbgMsg() {
        result.hasDbgMsg = false;
        result.dbgMsg_ = getDefaultInstance().getDbgMsg();
        return this;
      }
      
      // optional .tutorial.PhoneState.Compass compass = 4;
      public boolean hasCompass() {
        return result.hasCompass();
      }
      public com.cellbots.CellbotProtos.PhoneState.Compass getCompass() {
        return result.getCompass();
      }
      public Builder setCompass(com.cellbots.CellbotProtos.PhoneState.Compass value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCompass = true;
        result.compass_ = value;
        return this;
      }
      public Builder setCompass(com.cellbots.CellbotProtos.PhoneState.Compass.Builder builderForValue) {
        result.hasCompass = true;
        result.compass_ = builderForValue.build();
        return this;
      }
      public Builder mergeCompass(com.cellbots.CellbotProtos.PhoneState.Compass value) {
        if (result.hasCompass() &&
            result.compass_ != com.cellbots.CellbotProtos.PhoneState.Compass.getDefaultInstance()) {
          result.compass_ =
            com.cellbots.CellbotProtos.PhoneState.Compass.newBuilder(result.compass_).mergeFrom(value).buildPartial();
        } else {
          result.compass_ = value;
        }
        result.hasCompass = true;
        return this;
      }
      public Builder clearCompass() {
        result.hasCompass = false;
        result.compass_ = com.cellbots.CellbotProtos.PhoneState.Compass.getDefaultInstance();
        return this;
      }
      
      // optional .tutorial.PhoneState.Accelerometer accelerometer = 5;
      public boolean hasAccelerometer() {
        return result.hasAccelerometer();
      }
      public com.cellbots.CellbotProtos.PhoneState.Accelerometer getAccelerometer() {
        return result.getAccelerometer();
      }
      public Builder setAccelerometer(com.cellbots.CellbotProtos.PhoneState.Accelerometer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAccelerometer = true;
        result.accelerometer_ = value;
        return this;
      }
      public Builder setAccelerometer(com.cellbots.CellbotProtos.PhoneState.Accelerometer.Builder builderForValue) {
        result.hasAccelerometer = true;
        result.accelerometer_ = builderForValue.build();
        return this;
      }
      public Builder mergeAccelerometer(com.cellbots.CellbotProtos.PhoneState.Accelerometer value) {
        if (result.hasAccelerometer() &&
            result.accelerometer_ != com.cellbots.CellbotProtos.PhoneState.Accelerometer.getDefaultInstance()) {
          result.accelerometer_ =
            com.cellbots.CellbotProtos.PhoneState.Accelerometer.newBuilder(result.accelerometer_).mergeFrom(value).buildPartial();
        } else {
          result.accelerometer_ = value;
        }
        result.hasAccelerometer = true;
        return this;
      }
      public Builder clearAccelerometer() {
        result.hasAccelerometer = false;
        result.accelerometer_ = com.cellbots.CellbotProtos.PhoneState.Accelerometer.getDefaultInstance();
        return this;
      }
      
      // optional .tutorial.PhoneState.Orientation orientation = 6;
      public boolean hasOrientation() {
        return result.hasOrientation();
      }
      public com.cellbots.CellbotProtos.PhoneState.Orientation getOrientation() {
        return result.getOrientation();
      }
      public Builder setOrientation(com.cellbots.CellbotProtos.PhoneState.Orientation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasOrientation = true;
        result.orientation_ = value;
        return this;
      }
      public Builder setOrientation(com.cellbots.CellbotProtos.PhoneState.Orientation.Builder builderForValue) {
        result.hasOrientation = true;
        result.orientation_ = builderForValue.build();
        return this;
      }
      public Builder mergeOrientation(com.cellbots.CellbotProtos.PhoneState.Orientation value) {
        if (result.hasOrientation() &&
            result.orientation_ != com.cellbots.CellbotProtos.PhoneState.Orientation.getDefaultInstance()) {
          result.orientation_ =
            com.cellbots.CellbotProtos.PhoneState.Orientation.newBuilder(result.orientation_).mergeFrom(value).buildPartial();
        } else {
          result.orientation_ = value;
        }
        result.hasOrientation = true;
        return this;
      }
      public Builder clearOrientation() {
        result.hasOrientation = false;
        result.orientation_ = com.cellbots.CellbotProtos.PhoneState.Orientation.getDefaultInstance();
        return this;
      }
      
      // optional float phoneBatteryLevel = 7;
      public boolean hasPhoneBatteryLevel() {
        return result.hasPhoneBatteryLevel();
      }
      public float getPhoneBatteryLevel() {
        return result.getPhoneBatteryLevel();
      }
      public Builder setPhoneBatteryLevel(float value) {
        result.hasPhoneBatteryLevel = true;
        result.phoneBatteryLevel_ = value;
        return this;
      }
      public Builder clearPhoneBatteryLevel() {
        result.hasPhoneBatteryLevel = false;
        result.phoneBatteryLevel_ = 0F;
        return this;
      }
      
      // optional int32 phoneBatteryTemp = 8;
      public boolean hasPhoneBatteryTemp() {
        return result.hasPhoneBatteryTemp();
      }
      public int getPhoneBatteryTemp() {
        return result.getPhoneBatteryTemp();
      }
      public Builder setPhoneBatteryTemp(int value) {
        result.hasPhoneBatteryTemp = true;
        result.phoneBatteryTemp_ = value;
        return this;
      }
      public Builder clearPhoneBatteryTemp() {
        result.hasPhoneBatteryTemp = false;
        result.phoneBatteryTemp_ = 0;
        return this;
      }
      
      // optional int32 wifiStrength = 9;
      public boolean hasWifiStrength() {
        return result.hasWifiStrength();
      }
      public int getWifiStrength() {
        return result.getWifiStrength();
      }
      public Builder setWifiStrength(int value) {
        result.hasWifiStrength = true;
        result.wifiStrength_ = value;
        return this;
      }
      public Builder clearWifiStrength() {
        result.hasWifiStrength = false;
        result.wifiStrength_ = 0;
        return this;
      }
      
      // optional int32 wifiSpeed = 10;
      public boolean hasWifiSpeed() {
        return result.hasWifiSpeed();
      }
      public int getWifiSpeed() {
        return result.getWifiSpeed();
      }
      public Builder setWifiSpeed(int value) {
        result.hasWifiSpeed = true;
        result.wifiSpeed_ = value;
        return this;
      }
      public Builder clearWifiSpeed() {
        result.hasWifiSpeed = false;
        result.wifiSpeed_ = 0;
        return this;
      }
      
      // optional float lightLevel = 11;
      public boolean hasLightLevel() {
        return result.hasLightLevel();
      }
      public float getLightLevel() {
        return result.getLightLevel();
      }
      public Builder setLightLevel(float value) {
        result.hasLightLevel = true;
        result.lightLevel_ = value;
        return this;
      }
      public Builder clearLightLevel() {
        result.hasLightLevel = false;
        result.lightLevel_ = 0F;
        return this;
      }
      
      // optional string botID = 12;
      public boolean hasBotID() {
        return result.hasBotID();
      }
      public java.lang.String getBotID() {
        return result.getBotID();
      }
      public Builder setBotID(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBotID = true;
        result.botID_ = value;
        return this;
      }
      public Builder clearBotID() {
        result.hasBotID = false;
        result.botID_ = getDefaultInstance().getBotID();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:tutorial.PhoneState)
    }
    
    static {
      defaultInstance = new PhoneState(true);
      com.cellbots.CellbotProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:tutorial.PhoneState)
  }
  
  public static final class ControllerState extends
      com.google.protobuf.GeneratedMessage {
    // Use ControllerState.newBuilder() to construct.
    private ControllerState() {
      initFields();
    }
    private ControllerState(boolean noInit) {}
    
    private static final ControllerState defaultInstance;
    public static ControllerState getDefaultInstance() {
      return defaultInstance;
    }
    
    public ControllerState getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cellbots.CellbotProtos.internal_static_tutorial_ControllerState_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cellbots.CellbotProtos.internal_static_tutorial_ControllerState_fieldAccessorTable;
    }
    
    public static final class KeyEvent extends
        com.google.protobuf.GeneratedMessage {
      // Use KeyEvent.newBuilder() to construct.
      private KeyEvent() {
        initFields();
      }
      private KeyEvent(boolean noInit) {}
      
      private static final KeyEvent defaultInstance;
      public static KeyEvent getDefaultInstance() {
        return defaultInstance;
      }
      
      public KeyEvent getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cellbots.CellbotProtos.internal_static_tutorial_ControllerState_KeyEvent_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cellbots.CellbotProtos.internal_static_tutorial_ControllerState_KeyEvent_fieldAccessorTable;
      }
      
      // required string keyCode = 1;
      public static final int KEYCODE_FIELD_NUMBER = 1;
      private boolean hasKeyCode;
      private java.lang.String keyCode_ = "";
      public boolean hasKeyCode() { return hasKeyCode; }
      public java.lang.String getKeyCode() { return keyCode_; }
      
      // optional bool keyDown = 2;
      public static final int KEYDOWN_FIELD_NUMBER = 2;
      private boolean hasKeyDown;
      private boolean keyDown_ = false;
      public boolean hasKeyDown() { return hasKeyDown; }
      public boolean getKeyDown() { return keyDown_; }
      
      // optional bool keyUp = 3;
      public static final int KEYUP_FIELD_NUMBER = 3;
      private boolean hasKeyUp;
      private boolean keyUp_ = false;
      public boolean hasKeyUp() { return hasKeyUp; }
      public boolean getKeyUp() { return keyUp_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasKeyCode) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasKeyCode()) {
          output.writeString(1, getKeyCode());
        }
        if (hasKeyDown()) {
          output.writeBool(2, getKeyDown());
        }
        if (hasKeyUp()) {
          output.writeBool(3, getKeyUp());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasKeyCode()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getKeyCode());
        }
        if (hasKeyDown()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, getKeyDown());
        }
        if (hasKeyUp()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, getKeyUp());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.cellbots.CellbotProtos.ControllerState.KeyEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.KeyEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.KeyEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.KeyEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.KeyEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.KeyEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.KeyEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.cellbots.CellbotProtos.ControllerState.KeyEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.cellbots.CellbotProtos.ControllerState.KeyEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.KeyEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.cellbots.CellbotProtos.ControllerState.KeyEvent prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private com.cellbots.CellbotProtos.ControllerState.KeyEvent result;
        
        // Construct using com.cellbots.CellbotProtos.ControllerState.KeyEvent.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.cellbots.CellbotProtos.ControllerState.KeyEvent();
          return builder;
        }
        
        protected com.cellbots.CellbotProtos.ControllerState.KeyEvent internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.cellbots.CellbotProtos.ControllerState.KeyEvent();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.cellbots.CellbotProtos.ControllerState.KeyEvent.getDescriptor();
        }
        
        public com.cellbots.CellbotProtos.ControllerState.KeyEvent getDefaultInstanceForType() {
          return com.cellbots.CellbotProtos.ControllerState.KeyEvent.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.cellbots.CellbotProtos.ControllerState.KeyEvent build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.cellbots.CellbotProtos.ControllerState.KeyEvent buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.cellbots.CellbotProtos.ControllerState.KeyEvent buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.cellbots.CellbotProtos.ControllerState.KeyEvent returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.cellbots.CellbotProtos.ControllerState.KeyEvent) {
            return mergeFrom((com.cellbots.CellbotProtos.ControllerState.KeyEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.cellbots.CellbotProtos.ControllerState.KeyEvent other) {
          if (other == com.cellbots.CellbotProtos.ControllerState.KeyEvent.getDefaultInstance()) return this;
          if (other.hasKeyCode()) {
            setKeyCode(other.getKeyCode());
          }
          if (other.hasKeyDown()) {
            setKeyDown(other.getKeyDown());
          }
          if (other.hasKeyUp()) {
            setKeyUp(other.getKeyUp());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setKeyCode(input.readString());
                break;
              }
              case 16: {
                setKeyDown(input.readBool());
                break;
              }
              case 24: {
                setKeyUp(input.readBool());
                break;
              }
            }
          }
        }
        
        
        // required string keyCode = 1;
        public boolean hasKeyCode() {
          return result.hasKeyCode();
        }
        public java.lang.String getKeyCode() {
          return result.getKeyCode();
        }
        public Builder setKeyCode(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasKeyCode = true;
          result.keyCode_ = value;
          return this;
        }
        public Builder clearKeyCode() {
          result.hasKeyCode = false;
          result.keyCode_ = getDefaultInstance().getKeyCode();
          return this;
        }
        
        // optional bool keyDown = 2;
        public boolean hasKeyDown() {
          return result.hasKeyDown();
        }
        public boolean getKeyDown() {
          return result.getKeyDown();
        }
        public Builder setKeyDown(boolean value) {
          result.hasKeyDown = true;
          result.keyDown_ = value;
          return this;
        }
        public Builder clearKeyDown() {
          result.hasKeyDown = false;
          result.keyDown_ = false;
          return this;
        }
        
        // optional bool keyUp = 3;
        public boolean hasKeyUp() {
          return result.hasKeyUp();
        }
        public boolean getKeyUp() {
          return result.getKeyUp();
        }
        public Builder setKeyUp(boolean value) {
          result.hasKeyUp = true;
          result.keyUp_ = value;
          return this;
        }
        public Builder clearKeyUp() {
          result.hasKeyUp = false;
          result.keyUp_ = false;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:tutorial.ControllerState.KeyEvent)
      }
      
      static {
        defaultInstance = new KeyEvent(true);
        com.cellbots.CellbotProtos.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:tutorial.ControllerState.KeyEvent)
    }
    
    public static final class StickEvent extends
        com.google.protobuf.GeneratedMessage {
      // Use StickEvent.newBuilder() to construct.
      private StickEvent() {
        initFields();
      }
      private StickEvent(boolean noInit) {}
      
      private static final StickEvent defaultInstance;
      public static StickEvent getDefaultInstance() {
        return defaultInstance;
      }
      
      public StickEvent getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cellbots.CellbotProtos.internal_static_tutorial_ControllerState_StickEvent_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cellbots.CellbotProtos.internal_static_tutorial_ControllerState_StickEvent_fieldAccessorTable;
      }
      
      public enum StickType
          implements com.google.protobuf.ProtocolMessageEnum {
        ANALOG(0, 1),
        ORIENTATION(1, 2),
        LINEAR_ACCEL(2, 3),
        ANGULAR_ACCEL(3, 4),
        SLIDER(4, 5),
        WHEEL(5, 6),
        MOUSE(6, 7),
        ;
        
        
        public final int getNumber() { return value; }
        
        public static StickType valueOf(int value) {
          switch (value) {
            case 1: return ANALOG;
            case 2: return ORIENTATION;
            case 3: return LINEAR_ACCEL;
            case 4: return ANGULAR_ACCEL;
            case 5: return SLIDER;
            case 6: return WHEEL;
            case 7: return MOUSE;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<StickType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<StickType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<StickType>() {
                public StickType findValueByNumber(int number) {
                  return StickType.valueOf(number)
        ;        }
              };
        
        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.cellbots.CellbotProtos.ControllerState.StickEvent.getDescriptor().getEnumTypes().get(0);
        }
        
        private static final StickType[] VALUES = {
          ANALOG, ORIENTATION, LINEAR_ACCEL, ANGULAR_ACCEL, SLIDER, WHEEL, MOUSE, 
        };
        public static StickType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }
        private final int index;
        private final int value;
        private StickType(int index, int value) {
          this.index = index;
          this.value = value;
        }
        
        static {
          com.cellbots.CellbotProtos.getDescriptor();
        }
        
        // @@protoc_insertion_point(enum_scope:tutorial.ControllerState.StickEvent.StickType)
      }
      
      // required .tutorial.ControllerState.StickEvent.StickType stickType = 1;
      public static final int STICKTYPE_FIELD_NUMBER = 1;
      private boolean hasStickType;
      private com.cellbots.CellbotProtos.ControllerState.StickEvent.StickType stickType_;
      public boolean hasStickType() { return hasStickType; }
      public com.cellbots.CellbotProtos.ControllerState.StickEvent.StickType getStickType() { return stickType_; }
      
      // required int32 stickNumber = 2;
      public static final int STICKNUMBER_FIELD_NUMBER = 2;
      private boolean hasStickNumber;
      private int stickNumber_ = 0;
      public boolean hasStickNumber() { return hasStickNumber; }
      public int getStickNumber() { return stickNumber_; }
      
      // optional float x = 3;
      public static final int X_FIELD_NUMBER = 3;
      private boolean hasX;
      private float x_ = 0F;
      public boolean hasX() { return hasX; }
      public float getX() { return x_; }
      
      // optional float y = 4;
      public static final int Y_FIELD_NUMBER = 4;
      private boolean hasY;
      private float y_ = 0F;
      public boolean hasY() { return hasY; }
      public float getY() { return y_; }
      
      // optional float z = 5;
      public static final int Z_FIELD_NUMBER = 5;
      private boolean hasZ;
      private float z_ = 0F;
      public boolean hasZ() { return hasZ; }
      public float getZ() { return z_; }
      
      private void initFields() {
        stickType_ = com.cellbots.CellbotProtos.ControllerState.StickEvent.StickType.ANALOG;
      }
      public final boolean isInitialized() {
        if (!hasStickType) return false;
        if (!hasStickNumber) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasStickType()) {
          output.writeEnum(1, getStickType().getNumber());
        }
        if (hasStickNumber()) {
          output.writeInt32(2, getStickNumber());
        }
        if (hasX()) {
          output.writeFloat(3, getX());
        }
        if (hasY()) {
          output.writeFloat(4, getY());
        }
        if (hasZ()) {
          output.writeFloat(5, getZ());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasStickType()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, getStickType().getNumber());
        }
        if (hasStickNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getStickNumber());
        }
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, getY());
        }
        if (hasZ()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, getZ());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.cellbots.CellbotProtos.ControllerState.StickEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.StickEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.StickEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.StickEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.StickEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.StickEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.StickEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.cellbots.CellbotProtos.ControllerState.StickEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.cellbots.CellbotProtos.ControllerState.StickEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.cellbots.CellbotProtos.ControllerState.StickEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.cellbots.CellbotProtos.ControllerState.StickEvent prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private com.cellbots.CellbotProtos.ControllerState.StickEvent result;
        
        // Construct using com.cellbots.CellbotProtos.ControllerState.StickEvent.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.cellbots.CellbotProtos.ControllerState.StickEvent();
          return builder;
        }
        
        protected com.cellbots.CellbotProtos.ControllerState.StickEvent internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.cellbots.CellbotProtos.ControllerState.StickEvent();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.cellbots.CellbotProtos.ControllerState.StickEvent.getDescriptor();
        }
        
        public com.cellbots.CellbotProtos.ControllerState.StickEvent getDefaultInstanceForType() {
          return com.cellbots.CellbotProtos.ControllerState.StickEvent.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.cellbots.CellbotProtos.ControllerState.StickEvent build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.cellbots.CellbotProtos.ControllerState.StickEvent buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.cellbots.CellbotProtos.ControllerState.StickEvent buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.cellbots.CellbotProtos.ControllerState.StickEvent returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.cellbots.CellbotProtos.ControllerState.StickEvent) {
            return mergeFrom((com.cellbots.CellbotProtos.ControllerState.StickEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.cellbots.CellbotProtos.ControllerState.StickEvent other) {
          if (other == com.cellbots.CellbotProtos.ControllerState.StickEvent.getDefaultInstance()) return this;
          if (other.hasStickType()) {
            setStickType(other.getStickType());
          }
          if (other.hasStickNumber()) {
            setStickNumber(other.getStickNumber());
          }
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasZ()) {
            setZ(other.getZ());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                com.cellbots.CellbotProtos.ControllerState.StickEvent.StickType value = com.cellbots.CellbotProtos.ControllerState.StickEvent.StickType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  setStickType(value);
                }
                break;
              }
              case 16: {
                setStickNumber(input.readInt32());
                break;
              }
              case 29: {
                setX(input.readFloat());
                break;
              }
              case 37: {
                setY(input.readFloat());
                break;
              }
              case 45: {
                setZ(input.readFloat());
                break;
              }
            }
          }
        }
        
        
        // required .tutorial.ControllerState.StickEvent.StickType stickType = 1;
        public boolean hasStickType() {
          return result.hasStickType();
        }
        public com.cellbots.CellbotProtos.ControllerState.StickEvent.StickType getStickType() {
          return result.getStickType();
        }
        public Builder setStickType(com.cellbots.CellbotProtos.ControllerState.StickEvent.StickType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasStickType = true;
          result.stickType_ = value;
          return this;
        }
        public Builder clearStickType() {
          result.hasStickType = false;
          result.stickType_ = com.cellbots.CellbotProtos.ControllerState.StickEvent.StickType.ANALOG;
          return this;
        }
        
        // required int32 stickNumber = 2;
        public boolean hasStickNumber() {
          return result.hasStickNumber();
        }
        public int getStickNumber() {
          return result.getStickNumber();
        }
        public Builder setStickNumber(int value) {
          result.hasStickNumber = true;
          result.stickNumber_ = value;
          return this;
        }
        public Builder clearStickNumber() {
          result.hasStickNumber = false;
          result.stickNumber_ = 0;
          return this;
        }
        
        // optional float x = 3;
        public boolean hasX() {
          return result.hasX();
        }
        public float getX() {
          return result.getX();
        }
        public Builder setX(float value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0F;
          return this;
        }
        
        // optional float y = 4;
        public boolean hasY() {
          return result.hasY();
        }
        public float getY() {
          return result.getY();
        }
        public Builder setY(float value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0F;
          return this;
        }
        
        // optional float z = 5;
        public boolean hasZ() {
          return result.hasZ();
        }
        public float getZ() {
          return result.getZ();
        }
        public Builder setZ(float value) {
          result.hasZ = true;
          result.z_ = value;
          return this;
        }
        public Builder clearZ() {
          result.hasZ = false;
          result.z_ = 0F;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:tutorial.ControllerState.StickEvent)
      }
      
      static {
        defaultInstance = new StickEvent(true);
        com.cellbots.CellbotProtos.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:tutorial.ControllerState.StickEvent)
    }
    
    // required int64 timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private boolean hasTimestamp;
    private long timestamp_ = 0L;
    public boolean hasTimestamp() { return hasTimestamp; }
    public long getTimestamp() { return timestamp_; }
    
    // repeated .tutorial.ControllerState.KeyEvent keyEvent = 2;
    public static final int KEYEVENT_FIELD_NUMBER = 2;
    private java.util.List<com.cellbots.CellbotProtos.ControllerState.KeyEvent> keyEvent_ =
      java.util.Collections.emptyList();
    public java.util.List<com.cellbots.CellbotProtos.ControllerState.KeyEvent> getKeyEventList() {
      return keyEvent_;
    }
    public int getKeyEventCount() { return keyEvent_.size(); }
    public com.cellbots.CellbotProtos.ControllerState.KeyEvent getKeyEvent(int index) {
      return keyEvent_.get(index);
    }
    
    // repeated .tutorial.ControllerState.StickEvent stickEvent = 3;
    public static final int STICKEVENT_FIELD_NUMBER = 3;
    private java.util.List<com.cellbots.CellbotProtos.ControllerState.StickEvent> stickEvent_ =
      java.util.Collections.emptyList();
    public java.util.List<com.cellbots.CellbotProtos.ControllerState.StickEvent> getStickEventList() {
      return stickEvent_;
    }
    public int getStickEventCount() { return stickEvent_.size(); }
    public com.cellbots.CellbotProtos.ControllerState.StickEvent getStickEvent(int index) {
      return stickEvent_.get(index);
    }
    
    // optional string txtCommand = 4;
    public static final int TXTCOMMAND_FIELD_NUMBER = 4;
    private boolean hasTxtCommand;
    private java.lang.String txtCommand_ = "";
    public boolean hasTxtCommand() { return hasTxtCommand; }
    public java.lang.String getTxtCommand() { return txtCommand_; }
    
    // optional string controllerID = 5;
    public static final int CONTROLLERID_FIELD_NUMBER = 5;
    private boolean hasControllerID;
    private java.lang.String controllerID_ = "";
    public boolean hasControllerID() { return hasControllerID; }
    public java.lang.String getControllerID() { return controllerID_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasTimestamp) return false;
      for (com.cellbots.CellbotProtos.ControllerState.KeyEvent element : getKeyEventList()) {
        if (!element.isInitialized()) return false;
      }
      for (com.cellbots.CellbotProtos.ControllerState.StickEvent element : getStickEventList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTimestamp()) {
        output.writeInt64(1, getTimestamp());
      }
      for (com.cellbots.CellbotProtos.ControllerState.KeyEvent element : getKeyEventList()) {
        output.writeMessage(2, element);
      }
      for (com.cellbots.CellbotProtos.ControllerState.StickEvent element : getStickEventList()) {
        output.writeMessage(3, element);
      }
      if (hasTxtCommand()) {
        output.writeString(4, getTxtCommand());
      }
      if (hasControllerID()) {
        output.writeString(5, getControllerID());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getTimestamp());
      }
      for (com.cellbots.CellbotProtos.ControllerState.KeyEvent element : getKeyEventList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      for (com.cellbots.CellbotProtos.ControllerState.StickEvent element : getStickEventList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      if (hasTxtCommand()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getTxtCommand());
      }
      if (hasControllerID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getControllerID());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.cellbots.CellbotProtos.ControllerState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.cellbots.CellbotProtos.ControllerState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.cellbots.CellbotProtos.ControllerState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.cellbots.CellbotProtos.ControllerState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.cellbots.CellbotProtos.ControllerState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.cellbots.CellbotProtos.ControllerState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.cellbots.CellbotProtos.ControllerState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.cellbots.CellbotProtos.ControllerState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.cellbots.CellbotProtos.ControllerState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.cellbots.CellbotProtos.ControllerState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cellbots.CellbotProtos.ControllerState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.cellbots.CellbotProtos.ControllerState result;
      
      // Construct using com.cellbots.CellbotProtos.ControllerState.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.cellbots.CellbotProtos.ControllerState();
        return builder;
      }
      
      protected com.cellbots.CellbotProtos.ControllerState internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.cellbots.CellbotProtos.ControllerState();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cellbots.CellbotProtos.ControllerState.getDescriptor();
      }
      
      public com.cellbots.CellbotProtos.ControllerState getDefaultInstanceForType() {
        return com.cellbots.CellbotProtos.ControllerState.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.cellbots.CellbotProtos.ControllerState build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.cellbots.CellbotProtos.ControllerState buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.cellbots.CellbotProtos.ControllerState buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.keyEvent_ != java.util.Collections.EMPTY_LIST) {
          result.keyEvent_ =
            java.util.Collections.unmodifiableList(result.keyEvent_);
        }
        if (result.stickEvent_ != java.util.Collections.EMPTY_LIST) {
          result.stickEvent_ =
            java.util.Collections.unmodifiableList(result.stickEvent_);
        }
        com.cellbots.CellbotProtos.ControllerState returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cellbots.CellbotProtos.ControllerState) {
          return mergeFrom((com.cellbots.CellbotProtos.ControllerState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.cellbots.CellbotProtos.ControllerState other) {
        if (other == com.cellbots.CellbotProtos.ControllerState.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (!other.keyEvent_.isEmpty()) {
          if (result.keyEvent_.isEmpty()) {
            result.keyEvent_ = new java.util.ArrayList<com.cellbots.CellbotProtos.ControllerState.KeyEvent>();
          }
          result.keyEvent_.addAll(other.keyEvent_);
        }
        if (!other.stickEvent_.isEmpty()) {
          if (result.stickEvent_.isEmpty()) {
            result.stickEvent_ = new java.util.ArrayList<com.cellbots.CellbotProtos.ControllerState.StickEvent>();
          }
          result.stickEvent_.addAll(other.stickEvent_);
        }
        if (other.hasTxtCommand()) {
          setTxtCommand(other.getTxtCommand());
        }
        if (other.hasControllerID()) {
          setControllerID(other.getControllerID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTimestamp(input.readInt64());
              break;
            }
            case 18: {
              com.cellbots.CellbotProtos.ControllerState.KeyEvent.Builder subBuilder = com.cellbots.CellbotProtos.ControllerState.KeyEvent.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addKeyEvent(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.cellbots.CellbotProtos.ControllerState.StickEvent.Builder subBuilder = com.cellbots.CellbotProtos.ControllerState.StickEvent.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addStickEvent(subBuilder.buildPartial());
              break;
            }
            case 34: {
              setTxtCommand(input.readString());
              break;
            }
            case 42: {
              setControllerID(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required int64 timestamp = 1;
      public boolean hasTimestamp() {
        return result.hasTimestamp();
      }
      public long getTimestamp() {
        return result.getTimestamp();
      }
      public Builder setTimestamp(long value) {
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder clearTimestamp() {
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      // repeated .tutorial.ControllerState.KeyEvent keyEvent = 2;
      public java.util.List<com.cellbots.CellbotProtos.ControllerState.KeyEvent> getKeyEventList() {
        return java.util.Collections.unmodifiableList(result.keyEvent_);
      }
      public int getKeyEventCount() {
        return result.getKeyEventCount();
      }
      public com.cellbots.CellbotProtos.ControllerState.KeyEvent getKeyEvent(int index) {
        return result.getKeyEvent(index);
      }
      public Builder setKeyEvent(int index, com.cellbots.CellbotProtos.ControllerState.KeyEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.keyEvent_.set(index, value);
        return this;
      }
      public Builder setKeyEvent(int index, com.cellbots.CellbotProtos.ControllerState.KeyEvent.Builder builderForValue) {
        result.keyEvent_.set(index, builderForValue.build());
        return this;
      }
      public Builder addKeyEvent(com.cellbots.CellbotProtos.ControllerState.KeyEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.keyEvent_.isEmpty()) {
          result.keyEvent_ = new java.util.ArrayList<com.cellbots.CellbotProtos.ControllerState.KeyEvent>();
        }
        result.keyEvent_.add(value);
        return this;
      }
      public Builder addKeyEvent(com.cellbots.CellbotProtos.ControllerState.KeyEvent.Builder builderForValue) {
        if (result.keyEvent_.isEmpty()) {
          result.keyEvent_ = new java.util.ArrayList<com.cellbots.CellbotProtos.ControllerState.KeyEvent>();
        }
        result.keyEvent_.add(builderForValue.build());
        return this;
      }
      public Builder addAllKeyEvent(
          java.lang.Iterable<? extends com.cellbots.CellbotProtos.ControllerState.KeyEvent> values) {
        if (result.keyEvent_.isEmpty()) {
          result.keyEvent_ = new java.util.ArrayList<com.cellbots.CellbotProtos.ControllerState.KeyEvent>();
        }
        super.addAll(values, result.keyEvent_);
        return this;
      }
      public Builder clearKeyEvent() {
        result.keyEvent_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .tutorial.ControllerState.StickEvent stickEvent = 3;
      public java.util.List<com.cellbots.CellbotProtos.ControllerState.StickEvent> getStickEventList() {
        return java.util.Collections.unmodifiableList(result.stickEvent_);
      }
      public int getStickEventCount() {
        return result.getStickEventCount();
      }
      public com.cellbots.CellbotProtos.ControllerState.StickEvent getStickEvent(int index) {
        return result.getStickEvent(index);
      }
      public Builder setStickEvent(int index, com.cellbots.CellbotProtos.ControllerState.StickEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.stickEvent_.set(index, value);
        return this;
      }
      public Builder setStickEvent(int index, com.cellbots.CellbotProtos.ControllerState.StickEvent.Builder builderForValue) {
        result.stickEvent_.set(index, builderForValue.build());
        return this;
      }
      public Builder addStickEvent(com.cellbots.CellbotProtos.ControllerState.StickEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.stickEvent_.isEmpty()) {
          result.stickEvent_ = new java.util.ArrayList<com.cellbots.CellbotProtos.ControllerState.StickEvent>();
        }
        result.stickEvent_.add(value);
        return this;
      }
      public Builder addStickEvent(com.cellbots.CellbotProtos.ControllerState.StickEvent.Builder builderForValue) {
        if (result.stickEvent_.isEmpty()) {
          result.stickEvent_ = new java.util.ArrayList<com.cellbots.CellbotProtos.ControllerState.StickEvent>();
        }
        result.stickEvent_.add(builderForValue.build());
        return this;
      }
      public Builder addAllStickEvent(
          java.lang.Iterable<? extends com.cellbots.CellbotProtos.ControllerState.StickEvent> values) {
        if (result.stickEvent_.isEmpty()) {
          result.stickEvent_ = new java.util.ArrayList<com.cellbots.CellbotProtos.ControllerState.StickEvent>();
        }
        super.addAll(values, result.stickEvent_);
        return this;
      }
      public Builder clearStickEvent() {
        result.stickEvent_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional string txtCommand = 4;
      public boolean hasTxtCommand() {
        return result.hasTxtCommand();
      }
      public java.lang.String getTxtCommand() {
        return result.getTxtCommand();
      }
      public Builder setTxtCommand(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTxtCommand = true;
        result.txtCommand_ = value;
        return this;
      }
      public Builder clearTxtCommand() {
        result.hasTxtCommand = false;
        result.txtCommand_ = getDefaultInstance().getTxtCommand();
        return this;
      }
      
      // optional string controllerID = 5;
      public boolean hasControllerID() {
        return result.hasControllerID();
      }
      public java.lang.String getControllerID() {
        return result.getControllerID();
      }
      public Builder setControllerID(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasControllerID = true;
        result.controllerID_ = value;
        return this;
      }
      public Builder clearControllerID() {
        result.hasControllerID = false;
        result.controllerID_ = getDefaultInstance().getControllerID();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:tutorial.ControllerState)
    }
    
    static {
      defaultInstance = new ControllerState(true);
      com.cellbots.CellbotProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:tutorial.ControllerState)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_PhoneState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_PhoneState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_PhoneState_Compass_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_PhoneState_Compass_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_PhoneState_Accelerometer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_PhoneState_Accelerometer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_PhoneState_Orientation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_PhoneState_Orientation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_ControllerState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_ControllerState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_ControllerState_KeyEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_ControllerState_KeyEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_ControllerState_StickEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_ControllerState_StickEvent_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022src/Cellbots.proto\022\010tutorial\"\200\004\n\nPhone" +
      "State\022\021\n\ttimestamp\030\001 \002(\003\022\022\n\nvideoFrame\030\002" +
      " \001(\014\022\016\n\006dbgMsg\030\003 \001(\t\022-\n\007compass\030\004 \001(\0132\034." +
      "tutorial.PhoneState.Compass\0229\n\raccelerom" +
      "eter\030\005 \001(\0132\".tutorial.PhoneState.Acceler" +
      "ometer\0225\n\013orientation\030\006 \001(\0132 .tutorial.P" +
      "honeState.Orientation\022\031\n\021phoneBatteryLev" +
      "el\030\007 \001(\002\022\030\n\020phoneBatteryTemp\030\010 \001(\005\022\024\n\014wi" +
      "fiStrength\030\t \001(\005\022\021\n\twifiSpeed\030\n \001(\005\022\022\n\nl" +
      "ightLevel\030\013 \001(\002\022\r\n\005botID\030\014 \001(\t\032*\n\007Compas",
      "s\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\0320\n\rAc" +
      "celerometer\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003" +
      " \001(\002\032;\n\013Orientation\022\017\n\007azimuth\030\006 \001(\002\022\r\n\005" +
      "pitch\030\007 \001(\002\022\014\n\004roll\030\010 \001(\002\"\364\003\n\017Controller" +
      "State\022\021\n\ttimestamp\030\001 \002(\003\0224\n\010keyEvent\030\002 \003" +
      "(\0132\".tutorial.ControllerState.KeyEvent\0228" +
      "\n\nstickEvent\030\003 \003(\0132$.tutorial.Controller" +
      "State.StickEvent\022\022\n\ntxtCommand\030\004 \001(\t\022\024\n\014" +
      "controllerID\030\005 \001(\t\032;\n\010KeyEvent\022\017\n\007keyCod" +
      "e\030\001 \002(\t\022\017\n\007keyDown\030\002 \001(\010\022\r\n\005keyUp\030\003 \001(\010\032",
      "\366\001\n\nStickEvent\022A\n\tstickType\030\001 \002(\0162..tuto" +
      "rial.ControllerState.StickEvent.StickTyp" +
      "e\022\023\n\013stickNumber\030\002 \002(\005\022\t\n\001x\030\003 \001(\002\022\t\n\001y\030\004" +
      " \001(\002\022\t\n\001z\030\005 \001(\002\"o\n\tStickType\022\n\n\006ANALOG\020\001" +
      "\022\017\n\013ORIENTATION\020\002\022\020\n\014LINEAR_ACCEL\020\003\022\021\n\rA" +
      "NGULAR_ACCEL\020\004\022\n\n\006SLIDER\020\005\022\t\n\005WHEEL\020\006\022\t\n" +
      "\005MOUSE\020\007B\035\n\014com.cellbotsB\rCellbotProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_tutorial_PhoneState_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_tutorial_PhoneState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_PhoneState_descriptor,
              new java.lang.String[] { "Timestamp", "VideoFrame", "DbgMsg", "Compass", "Accelerometer", "Orientation", "PhoneBatteryLevel", "PhoneBatteryTemp", "WifiStrength", "WifiSpeed", "LightLevel", "BotID", },
              com.cellbots.CellbotProtos.PhoneState.class,
              com.cellbots.CellbotProtos.PhoneState.Builder.class);
          internal_static_tutorial_PhoneState_Compass_descriptor =
            internal_static_tutorial_PhoneState_descriptor.getNestedTypes().get(0);
          internal_static_tutorial_PhoneState_Compass_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_PhoneState_Compass_descriptor,
              new java.lang.String[] { "X", "Y", "Z", },
              com.cellbots.CellbotProtos.PhoneState.Compass.class,
              com.cellbots.CellbotProtos.PhoneState.Compass.Builder.class);
          internal_static_tutorial_PhoneState_Accelerometer_descriptor =
            internal_static_tutorial_PhoneState_descriptor.getNestedTypes().get(1);
          internal_static_tutorial_PhoneState_Accelerometer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_PhoneState_Accelerometer_descriptor,
              new java.lang.String[] { "X", "Y", "Z", },
              com.cellbots.CellbotProtos.PhoneState.Accelerometer.class,
              com.cellbots.CellbotProtos.PhoneState.Accelerometer.Builder.class);
          internal_static_tutorial_PhoneState_Orientation_descriptor =
            internal_static_tutorial_PhoneState_descriptor.getNestedTypes().get(2);
          internal_static_tutorial_PhoneState_Orientation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_PhoneState_Orientation_descriptor,
              new java.lang.String[] { "Azimuth", "Pitch", "Roll", },
              com.cellbots.CellbotProtos.PhoneState.Orientation.class,
              com.cellbots.CellbotProtos.PhoneState.Orientation.Builder.class);
          internal_static_tutorial_ControllerState_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_tutorial_ControllerState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_ControllerState_descriptor,
              new java.lang.String[] { "Timestamp", "KeyEvent", "StickEvent", "TxtCommand", "ControllerID", },
              com.cellbots.CellbotProtos.ControllerState.class,
              com.cellbots.CellbotProtos.ControllerState.Builder.class);
          internal_static_tutorial_ControllerState_KeyEvent_descriptor =
            internal_static_tutorial_ControllerState_descriptor.getNestedTypes().get(0);
          internal_static_tutorial_ControllerState_KeyEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_ControllerState_KeyEvent_descriptor,
              new java.lang.String[] { "KeyCode", "KeyDown", "KeyUp", },
              com.cellbots.CellbotProtos.ControllerState.KeyEvent.class,
              com.cellbots.CellbotProtos.ControllerState.KeyEvent.Builder.class);
          internal_static_tutorial_ControllerState_StickEvent_descriptor =
            internal_static_tutorial_ControllerState_descriptor.getNestedTypes().get(1);
          internal_static_tutorial_ControllerState_StickEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_ControllerState_StickEvent_descriptor,
              new java.lang.String[] { "StickType", "StickNumber", "X", "Y", "Z", },
              com.cellbots.CellbotProtos.ControllerState.StickEvent.class,
              com.cellbots.CellbotProtos.ControllerState.StickEvent.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}

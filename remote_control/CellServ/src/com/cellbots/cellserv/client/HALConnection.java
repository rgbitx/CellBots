// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from Cellbots.proto

package com.cellbots.cellserv.client;

import com.google.gwt.core.client.*;

public final class HALConnection extends JavaScriptObject  {

    public static final class ConnectionDirection extends JavaScriptObject {
            
        public static final ConnectionDirection READ_ONLY = create(1);
        public static final ConnectionDirection WRITE_ONLY = create(2);
        public static final ConnectionDirection HALF_DUPLEX = create(3);
        public static final ConnectionDirection FULL_DUPLEX = create(4);
        
        private static native ConnectionDirection create(int number) /*-{
            return [number];
        }-*/;
        
        protected ConnectionDirection() {}
        
        public native int getNumber() /*-{
            return this[0];
        }-*/;
        
        // dev mode
        public static native JsArray<ConnectionDirection> getArray(JavaScriptObject obj, String key) /*-{
            var v = obj[key];
            if(v && v.length && !v[0].length) {
                for(var i=0,l=v.length; i<l; i++)
                    v[i] = [v[i]];
            }
            return v;
        }-*/;

        public static native ConnectionDirection get(JavaScriptObject obj, String key) /*-{
            var v = obj[key];
            if(v == null)
                return [1];
            return v.length ? v : (obj[key] = [v]);
        }-*/;
    }

    public static final class ConnectionType extends JavaScriptObject {
            
        public static final ConnectionType HARDWARE_SERIAL = create(1);
        public static final ConnectionType BLUETOOTH_SERIAL = create(2);
        public static final ConnectionType AUDIO_SERIAL = create(3);
        public static final ConnectionType AUDIO_PWM = create(4);
        public static final ConnectionType AUDIO_PPM = create(5);
        public static final ConnectionType AUDIO_AM = create(6);
        public static final ConnectionType AUDIO_FM = create(7);
        public static final ConnectionType INFRARED = create(8);
        
        private static native ConnectionType create(int number) /*-{
            return [number];
        }-*/;
        
        protected ConnectionType() {}
        
        public native int getNumber() /*-{
            return this[0];
        }-*/;
        
        // dev mode
        public static native JsArray<ConnectionType> getArray(JavaScriptObject obj, String key) /*-{
            var v = obj[key];
            if(v && v.length && !v[0].length) {
                for(var i=0,l=v.length; i<l; i++)
                    v[i] = [v[i]];
            }
            return v;
        }-*/;

        public static native ConnectionType get(JavaScriptObject obj, String key) /*-{
            var v = obj[key];
            if(v == null)
                return [1];
            return v.length ? v : (obj[key] = [v]);
        }-*/;
    }

    public static final class ConnectionState extends JavaScriptObject {
            
        public static final ConnectionState DISCONNECTED = create(1);
        public static final ConnectionState PAIRED = create(2);
        public static final ConnectionState BONDING = create(3);
        public static final ConnectionState BONDED = create(4);
        public static final ConnectionState TALKING = create(5);
        public static final ConnectionState WAITING = create(7);
        public static final ConnectionState PAUSED = create(8);
        public static final ConnectionState ERROR = create(9);
        
        private static native ConnectionState create(int number) /*-{
            return [number];
        }-*/;
        
        protected ConnectionState() {}
        
        public native int getNumber() /*-{
            return this[0];
        }-*/;
        
        // dev mode
        public static native JsArray<ConnectionState> getArray(JavaScriptObject obj, String key) /*-{
            var v = obj[key];
            if(v && v.length && !v[0].length) {
                for(var i=0,l=v.length; i<l; i++)
                    v[i] = [v[i]];
            }
            return v;
        }-*/;

        public static native ConnectionState get(JavaScriptObject obj, String key) /*-{
            var v = obj[key];
            if(v == null)
                return [1];
            return v.length ? v : (obj[key] = [v]);
        }-*/;
    }

    /**
     * Creates a new HALConnection instance 
     *
     * @return new HALConnection instance
     */
    public static native HALConnection create() /*-{
        return {
                        
        };
    }-*/;

    /**
     * Creates a new JsArray<HALConnection> instance 
     *
     * @return new JsArray<HALConnection> instance
     */
    public static native JsArray<HALConnection> createArray() /*-{
        return [];
    }-*/;

    /**
     * Gets a HALConnection (casting) from a JavaScriptObject
     *
     * @param JavaScriptObject to cast
     * @return HALConnection
     */
    public static native HALConnection get(JavaScriptObject jso) /*-{
        return jso;
    }-*/;
    
    /**
     * Gets a JsArray<HALConnection> (casting) from a JavaScriptObject
     *
     * @param JavaScriptObject to cast
     * @return JsArray<HALConnection> 
     */
    public static native JsArray<HALConnection> getArray(JavaScriptObject jso) /*-{
        return jso;
    }-*/;
    
    /**
     * Parses a HALConnection from a json string
     *
     * @param json string to be parsed/evaluated
     * @return HALConnection 
     */
    public static native HALConnection parse(String json) /*-{
        return eval("(" + json + ")");
    }-*/;
    
    /**
     * Parses a JsArray<HALConnection> from a json string
     *
     * @param json string to be parsed/evaluated
     * @return JsArray<HALConnection> 
     */
    public static native JsArray<HALConnection> parseArray(String json) /*-{
        return eval("(" + json + ")");
    }-*/;
    
    /**
     * Serializes a json object to a json string.
     *
     * @param HALConnection the object to serialize
     * @return String the serialized json string
     */
    public static native String stringify(HALConnection obj) /*-{
        var buf = [];
        var _1 = obj["address"];
        if(_1 != null)
            buf.push("\"address\":\"" + _1 + "\"");
        var _2 = obj["name"];
        if(_2 != null)
            buf.push("\"name\":\"" + _2 + "\"");
        var _3 = obj["uuid"];
        if(_3 != null)
            buf.push("\"uuid\":\"" + _3 + "\"");
        var _5 = obj["baudRate"];
        if(_5 != null)
            buf.push("\"baudRate\":" + _5);
        var _6 = obj["readBuffer"];
        if(_6 != null)
            buf.push("\"readBuffer\":\"" + _6 + "\"");
        var _7 = obj["writeBuffer"];
        if(_7 != null)
            buf.push("\"writeBuffer\":\"" + _7 + "\"");
        var _8 = obj["delimiter"];
        if(_8 != null)
            buf.push("\"delimiter\":\"" + _8 + "\"");
        var _9 = obj["rssi"];
        if(_9 != null)
            buf.push("\"rssi\":" + _9);
        var _11 = obj["connectionDirection"];
        if(_11 != null)
            buf.push("\"connectionDirection\":" + _11);
        var _12 = obj["connectionType"];
        if(_12 != null)
            buf.push("\"connectionType\":" + _12);
        var _13 = obj["connectionState"];
        if(_13 != null)
            buf.push("\"connectionState\":" + _13);
        var _14 = obj["prevConnectionState"];
        if(_14 != null)
            buf.push("\"prevConnectionState\":" + _14);
        var _15 = obj["dbgMsg"];
        if(_15 != null)
            buf.push("\"dbgMsg\":\"" + _15 + "\"");
        var _16 = obj["timestamp"];
        if(_16 != null)
            buf.push("\"timestamp\":" + _16);

        return buf.length == 0 ? "{}" : "{" + buf.join(",") + "}";
    }-*/;
    
    public static native boolean isInitialized(HALConnection obj) /*-{
        return true;
    }-*/;
    
    protected HALConnection() {}

    // getters and setters

    // address

    public native String getAddress() /*-{
        return this["address"] || "";
    }-*/;

    public native void setAddress(String address) /*-{
        this["address"] = address;
    }-*/;

    public native void clearAddress() /*-{
        delete this["address"];
    }-*/;

    public native boolean hasAddress() /*-{
        return this["address"] != null;
    }-*/;

    // name

    public native String getName() /*-{
        return this["name"] || "";
    }-*/;

    public native void setName(String name) /*-{
        this["name"] = name;
    }-*/;

    public native void clearName() /*-{
        delete this["name"];
    }-*/;

    public native boolean hasName() /*-{
        return this["name"] != null;
    }-*/;

    // uuid

    public native String getUuid() /*-{
        return this["uuid"] || "";
    }-*/;

    public native void setUuid(String uuid) /*-{
        this["uuid"] = uuid;
    }-*/;

    public native void clearUuid() /*-{
        delete this["uuid"];
    }-*/;

    public native boolean hasUuid() /*-{
        return this["uuid"] != null;
    }-*/;

    // baudRate

    public native int getBaudRate() /*-{
        return this["baudRate"] || 0;
    }-*/;

    public native void setBaudRate(int baudRate) /*-{
        this["baudRate"] = baudRate;
    }-*/;

    public native void clearBaudRate() /*-{
        delete this["baudRate"];
    }-*/;

    public native boolean hasBaudRate() /*-{
        return this["baudRate"] != null;
    }-*/;

    // readBuffer

    public native String getReadBuffer() /*-{
        return this["readBuffer"];
    }-*/;

    public native void setReadBuffer(String readBuffer) /*-{
        this["readBuffer"] = readBuffer;
    }-*/;

    public native void clearReadBuffer() /*-{
        delete this["readBuffer"];
    }-*/;

    public native boolean hasReadBuffer() /*-{
        return this["readBuffer"] != null;
    }-*/;

    // writeBuffer

    public native String getWriteBuffer() /*-{
        return this["writeBuffer"];
    }-*/;

    public native void setWriteBuffer(String writeBuffer) /*-{
        this["writeBuffer"] = writeBuffer;
    }-*/;

    public native void clearWriteBuffer() /*-{
        delete this["writeBuffer"];
    }-*/;

    public native boolean hasWriteBuffer() /*-{
        return this["writeBuffer"] != null;
    }-*/;

    // delimiter

    public native String getDelimiter() /*-{
        return this["delimiter"];
    }-*/;

    public native void setDelimiter(String delimiter) /*-{
        this["delimiter"] = delimiter;
    }-*/;

    public native void clearDelimiter() /*-{
        delete this["delimiter"];
    }-*/;

    public native boolean hasDelimiter() /*-{
        return this["delimiter"] != null;
    }-*/;

    // rssi

    public native int getRssi() /*-{
        return this["rssi"] || 0;
    }-*/;

    public native void setRssi(int rssi) /*-{
        this["rssi"] = rssi;
    }-*/;

    public native void clearRssi() /*-{
        delete this["rssi"];
    }-*/;

    public native boolean hasRssi() /*-{
        return this["rssi"] != null;
    }-*/;

    // connectionDirection

    public native ConnectionDirection getConnectionDirection() /*-{
        return @com.cellbots.cellserv.client.HALConnection.ConnectionDirection::get(Lcom/google/gwt/core/client/JavaScriptObject;Ljava/lang/String;)(this, "connectionDirection");
    }-*/;

    public native void setConnectionDirection(ConnectionDirection connectionDirection) /*-{
        this["connectionDirection"] = connectionDirection;
    }-*/;

    public native void clearConnectionDirection() /*-{
        delete this["connectionDirection"];
    }-*/;

    public native boolean hasConnectionDirection() /*-{
        return this["connectionDirection"] != null;
    }-*/;

    // connectionType

    public native ConnectionType getConnectionType() /*-{
        return @com.cellbots.cellserv.client.HALConnection.ConnectionType::get(Lcom/google/gwt/core/client/JavaScriptObject;Ljava/lang/String;)(this, "connectionType");
    }-*/;

    public native void setConnectionType(ConnectionType connectionType) /*-{
        this["connectionType"] = connectionType;
    }-*/;

    public native void clearConnectionType() /*-{
        delete this["connectionType"];
    }-*/;

    public native boolean hasConnectionType() /*-{
        return this["connectionType"] != null;
    }-*/;

    // connectionState

    public native ConnectionState getConnectionState() /*-{
        return @com.cellbots.cellserv.client.HALConnection.ConnectionState::get(Lcom/google/gwt/core/client/JavaScriptObject;Ljava/lang/String;)(this, "connectionState");
    }-*/;

    public native void setConnectionState(ConnectionState connectionState) /*-{
        this["connectionState"] = connectionState;
    }-*/;

    public native void clearConnectionState() /*-{
        delete this["connectionState"];
    }-*/;

    public native boolean hasConnectionState() /*-{
        return this["connectionState"] != null;
    }-*/;

    // prevConnectionState

    public native ConnectionState getPrevConnectionState() /*-{
        return @com.cellbots.cellserv.client.HALConnection.ConnectionState::get(Lcom/google/gwt/core/client/JavaScriptObject;Ljava/lang/String;)(this, "prevConnectionState");
    }-*/;

    public native void setPrevConnectionState(ConnectionState prevConnectionState) /*-{
        this["prevConnectionState"] = prevConnectionState;
    }-*/;

    public native void clearPrevConnectionState() /*-{
        delete this["prevConnectionState"];
    }-*/;

    public native boolean hasPrevConnectionState() /*-{
        return this["prevConnectionState"] != null;
    }-*/;

    // dbgMsg

    public native String getDbgMsg() /*-{
        return this["dbgMsg"] || "";
    }-*/;

    public native void setDbgMsg(String dbgMsg) /*-{
        this["dbgMsg"] = dbgMsg;
    }-*/;

    public native void clearDbgMsg() /*-{
        delete this["dbgMsg"];
    }-*/;

    public native boolean hasDbgMsg() /*-{
        return this["dbgMsg"] != null;
    }-*/;

    // timestamp

    public native double getTimestamp() /*-{
        return this["timestamp"] || 0;
    }-*/;

    public native void setTimestamp(double timestamp) /*-{
        this["timestamp"] = timestamp;
    }-*/;

    public native void clearTimestamp() /*-{
        delete this["timestamp"];
    }-*/;

    public native boolean hasTimestamp() /*-{
        return this["timestamp"] != null;
    }-*/;

}
